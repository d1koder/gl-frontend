[{"/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/common/Modal/index.js":"1","/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/App.js":"2","/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/pages/Login/index.js":"3","/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/common/Header/index.js":"4","/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/utils/constants/userConstants.js":"5","/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/pages/SignUp/index.js":"6","/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/index.js":"7","/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/pages/SearchResults/index.js":"8","/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/common/Footer/index.js":"9","/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/utils/reducers/userReducer.js":"10","/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/common/Test/index.js":"11","/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/pages/Bookings/index.js":"12"},{"size":4610,"mtime":1612590594276,"results":"13","hashOfConfig":"14"},{"size":1871,"mtime":1612588087215,"results":"15","hashOfConfig":"14"},{"size":3476,"mtime":1612588087217,"results":"16","hashOfConfig":"14"},{"size":3361,"mtime":1612588087215,"results":"17","hashOfConfig":"14"},{"size":340,"mtime":1612138544114,"results":"18","hashOfConfig":"14"},{"size":5216,"mtime":1612588087219,"results":"19","hashOfConfig":"14"},{"size":385,"mtime":1612138544110,"results":"20","hashOfConfig":"14"},{"size":1285,"mtime":1612588087219,"results":"21","hashOfConfig":"14"},{"size":413,"mtime":1612138544109,"results":"22","hashOfConfig":"14"},{"size":1571,"mtime":1612588087222,"results":"23","hashOfConfig":"14"},{"size":2442,"mtime":1612588087216,"results":"24","hashOfConfig":"14"},{"size":3660,"mtime":1612588087217,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"182pcyo",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/common/Modal/index.js",[],"/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/App.js",[],["54","55"],"/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/pages/Login/index.js",[],["56","57"],"/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/common/Header/index.js",[],["58","59"],"/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/utils/constants/userConstants.js",[],"/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/pages/SignUp/index.js",["60"],"import React, { useContext, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport { UserContext } from '../../utils/context/userContext'\nimport { Form, Button } from 'react-bootstrap'\nimport FormContainer from '../../common/FormContainer'\n\nimport {toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst SignUp = () => {\n\n    const history = useHistory()\n\n    const { dispatch } = useContext(UserContext)\n\n    const { register, handleSubmit, errors } = useForm({ mode: \"onChange\" });\n\n    const onSubmit = (formData) => {\n\n        const username = formData.username\n        const email = formData.email\n        const password = formData.password\n        const password_confirmation = formData.password_confirmation\n        const admin = false\n\n        const request = { \"username\": username, \"email\": email, \"password\": password, \"password_confirmation\": password_confirmation, \"admin\": admin }\n\n        const requestOptions = {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type': 'application/json;charset=utf-8;',\n            }),\n            body: JSON.stringify(request)\n        }\n\n\n        fetch('http://localhost:3000/api/auth/sign_up', requestOptions)\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                }\n                throw response;\n            })\n            .then(result => {\n                console.log(result);\n                dispatch({\n                    type: \"USER_SIGNUP_SUCCESS\",\n                    payload: {\n                        username: result.username,\n                        jwt: result.jwt\n                    }\n                })\n                history.push('/')\n            })\n            .catch(error => {\n                const detail = error.json()\n                detail.then(message => {\n                    console.log(message);\n                    if (message.username) {\n                        toast.error('This username has been taken')\n                    }\n                    if (message.email) {\n                        toast.error('This email has been taken')\n                    }\n                    if (message.password_confirmation) {\n                        toast.error('The Password and confirmation don\\'t match')\n                    }\n                    dispatch({\n                        type: \"USER_SIGNUP_FAIL\",\n                        payload: detail\n                    })\n                });\n            })\n    }\n\n\n\n    return (\n        <FormContainer>\n            <h1 style={{ marginTop: \"10vh\", marginBottom: \"5vh\" }}>\n                Sign Up\n            </h1>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Form.Group controlId=\"username\">\n                    <Form.Label>Username: </Form.Label>\n                    <Form.Control\n                        name=\"username\"\n                        type=\"input\"\n                        ref={register({ required: true })}\n                    />\n                </Form.Group>\n                {errors.username && <><div>&nbsp;*Username is required</div><br /></>}\n\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email: </Form.Label>\n                    <Form.Control\n                        name=\"email\"\n                        type=\"email\"\n                        ref={register({ required: true })}\n                    />\n                </Form.Group>\n                {errors.email && <><div>&nbsp;*Email is required</div><br /></>}\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label >Password:</Form.Label>\n                    <Form.Control\n                        name=\"password\"\n                        type=\"password\"\n                        ref={register({\n                            required: true,\n                            minLength: {\n                                value: 6,\n                                message: '*must be 6 chars'\n                            },\n                            validate: (value) => {\n                                return (\n                                    [/[^a-zA-Z0-9]/].every(pattern => pattern.test(value))\n                                ) || '*must include a special char'\n                            }\n                        })}\n                    />\n                </Form.Group>\n                {errors.password && <><div>&nbsp;{errors.password.message}</div><br /></>}\n\n                <Form.Group controlId=\"password_confirmation\">\n                    <Form.Label>Password Confirmation:</Form.Label>\n                    <Form.Control\n                        name=\"password_confirmation\"\n                        type=\"password\"\n                        ref={register({ required: true })}\n                    />\n                </Form.Group>\n                {errors.password_confirmation && <><div>&nbsp;*Password confirmation is required</div></>}\n                <br />\n                <Button type=\"submit\">\n                    Sign Up\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default SignUp\n","/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/index.js",[],"/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/pages/SearchResults/index.js",[],"/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/common/Footer/index.js",[],"/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/utils/reducers/userReducer.js",[],"/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/common/Test/index.js",[],"/Users/dk/Desktop/T3A2/T3A2-B/part b/gl-frontend/src/pages/Bookings/index.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"61","replacedBy":"65"},{"ruleId":"63","replacedBy":"66"},{"ruleId":"61","replacedBy":"67"},{"ruleId":"63","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":29,"nodeType":"71","messageId":"72","endLine":1,"endColumn":37},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],["73"],["74"],["73"],["74"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]